#!/bin/sh

function usage {
	echo "Usage: profilerrific [-h|--help] (-s|--scripts) <script>* [(-r|--revisions) <revision>*] [(-g|--grapher) <graphing script>]"
}

function tidy {
	echo "$@" | sed -e 's/\s*-.*//'
}

if [[ ! "$*" ]]; then
	usage;
	exit
fi

while [[ "$@" ]]; do
	ARG="$1"
	shift
	case "$ARG" in
	-h|--help)      usage; break;;
	-r|--revisions) revisions=`tidy "$@"`;;
	-s|--scripts)   scripts=`  tidy "$@"`;;
	-g|--grapher)   grapher=`  tidy "$@"`;;
	esac
done

current_revision=`git rev-parse --short HEAD`

echo "Current revision: $current_revision"

if [[ "$revisions" ]]; then echo "Revisions: $revisions"; fi
if [[ "$scripts" ]];   then echo "Scripts:   $scripts";   fi

# Run the scripts for each revision
for revision in $revisions; do
	git reset --hard $revision --
	for script in $scripts; do
		$script
	done
done

# Run the scripts even if no revisions are supplied
if [[ ! "$revisions" ]]; then
	for script in $scripts; do
		$script
	done
fi

# Bring the WC back to where we left off
git reset --hard $current_revision --

# Graph each revision pair
if [[ "$grapher" ]]; then
	for revisionl in $revisions; do
		for revisionr in $revisions; do
			if [[ $revisionl -lt $revisionr ]]; then
				for script in $scripts; do
					echo "Graphing script $script results for revisions $revisionl vs. $revisionr"
					$grapher $script $revisionl $revisionr
				done
			fi
		done
	done
fi
